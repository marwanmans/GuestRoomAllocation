@page
@model GuestsIndexModel
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@{
    ViewData["Title"] = "Guests";
}

@section HeaderActions {
    <a href="/Guests/Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Add New Guest
    </a>
}

<div class="row mb-3">
    <div class="col-md-6">
        <input type="text" id="searchInput" class="form-control" placeholder="Search guests by name, email, or job position...">
    </div>
    <div class="col-md-6">
        <select id="statusFilter" class="form-select">
            <option value="">All Guests</option>
            <option value="current">Currently Allocated</option>
            <option value="past">Past Guests</option>
            <option value="upcoming">Upcoming Guests</option>
        </select>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Contact</th>
                        <th>Job Position</th>
                        <th>Current Status</th>
                        <th>Last Stay</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="guestTableBody">
                    @foreach (var guest in Model.Guests)
                    {
                        <tr class="guest-row"
                            data-name="@guest.FullName.ToLower()"
                            data-email="@guest.Email.ToLower()"
                            data-job="@(guest.JobPosition?.ToLower() ?? "")"
                            data-status="@Model.GetGuestStatus(guest)">
                            <td>
                                <strong>@guest.FullName</strong>
                                @if (!string.IsNullOrEmpty(guest.Notes))
                                {
                                    <br>

                                    <small class="text-muted">@guest.Notes</small>
                                }
                            </td>
                            <td>
                                <div>@guest.Email</div>
                                <div><small class="text-muted">@guest.Phone</small></div>
                            </td>
                            <td>@guest.JobPosition</td>
                            <td>
                                @{
                                    var status = Model.GetGuestStatus(guest);
                                    var statusClass = status switch
                                    {
                                        "current" => "success",
                                        "upcoming" => "info",
                                        "past" => "secondary",
                                        _ => "light"
                                    };
                                    var statusText = status switch
                                    {
                                        "current" => "Currently Staying",
                                        "upcoming" => "Upcoming Stay",
                                        "past" => "Past Guest",
                                        _ => "No Allocations"
                                    };
                                }
                                <span class="badge bg-@statusClass">@statusText</span>
                                @if (Model.GetCurrentAllocation(guest) != null)
                                {
                                    var allocation = Model.GetCurrentAllocation(guest);
                                    <br>

                                    <small class="text-muted">
                                        @allocation.Room.Apartment.Name - @allocation.Room.RoomNumber
                                        <br>Until @allocation.CheckOutDate.ToString("MMM dd, yyyy")
                                    </small>
                                }
                            </td>
                            <td>
                                @{
                                    var lastStay = Model.GetLastStay(guest);
                                }
                                @if (lastStay != null)
                                {
                                    <div>@lastStay.CheckOutDate.ToString("MMM dd, yyyy")</div>
                                    <small class="text-muted">@lastStay.Room.Apartment.Name - @lastStay.Room.RoomNumber</small>
                                }
                                else
                                {
                                    <span class="text-muted">No previous stays</span>
                                }
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a href="/Guests/Edit/@guest.Id" class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="/Allocations/Create?guestId=@guest.Id" class="btn btn-sm btn-outline-success">
                                        <i class="fas fa-calendar-plus"></i>
                                    </a>
                                    <a href="/Guests/Delete/@guest.Id" class="btn btn-sm btn-outline-danger">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('searchInput').addEventListener('input', function() {
            filterGuests();
        });

        document.getElementById('statusFilter').addEventListener('change', function() {
            filterGuests();
        });

        function filterGuests() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;
            const rows = document.querySelectorAll('.guest-row');

            rows.forEach(row => {
                const name = row.dataset.name;
                const email = row.dataset.email;
                const job = row.dataset.job;
                const status = row.dataset.status;

                const searchMatch = !searchTerm || name.includes(searchTerm) ||
                                   email.includes(searchTerm) || job.includes(searchTerm);
                const statusMatch = !statusFilter || status === statusFilter;

                row.style.display = searchMatch && statusMatch ? '' : 'none';
            });
        }
    </script>
}