@page "{id:int}"
@model EditRoomModel
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@{
    ViewData["Title"] = "Edit Room";
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5>Edit Room: @Model.Room.Apartment.Name - @Model.Room.RoomNumber</h5>
            </div>
            <div class="card-body">
                <form method="post">
                    <input type="hidden" asp-for="Room.Id" />

                    <div class="mb-3">
                        <label asp-for="Room.ApartmentId" class="form-label">Apartment *</label>
                        <select asp-for="Room.ApartmentId" class="form-select" required>
                            @foreach (var apartment in Model.Apartments)
                            {
                                <option value="@apartment.Id" selected="@(apartment.Id == Model.Room.ApartmentId)">
                                    @apartment.Name - @apartment.Address
                                </option>
                            }
                        </select>
                        <span asp-validation-for="Room.ApartmentId" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Room.RoomNumber" class="form-label">Room Number *</label>
                                <input asp-for="Room.RoomNumber" class="form-control" required />
                                <span asp-validation-for="Room.RoomNumber" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Room.Size" class="form-label">Size (m²) *</label>
                                <input asp-for="Room.Size" type="number" class="form-control" required min="1" />
                                <span asp-validation-for="Room.Size" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Room.MaxOccupancy" class="form-label">Max Occupancy *</label>
                                <input asp-for="Room.MaxOccupancy" type="number" class="form-control"
                                       required min="1" max="4" />
                                <span asp-validation-for="Room.MaxOccupancy" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <div class="form-check mt-4">
                                    <input asp-for="Room.HasPrivateBathroom" class="form-check-input" type="checkbox" />
                                    <label asp-for="Room.HasPrivateBathroom" class="form-check-label">
                                        Has Private Bathroom
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Room.Description" class="form-label">Description</label>
                        <textarea asp-for="Room.Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Room.Description" class="text-danger"></span>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="/Rooms" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to Rooms
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Update Room
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <!-- Current Status -->
        <div class="card mb-3">
            <div class="card-header">
                <h6><i class="fas fa-calendar-alt"></i> Current Status</h6>
            </div>
            <div class="card-body">
                @if (Model.CurrentAllocation != null)
                {
                    <div class="alert alert-info">
                        <strong>Currently Occupied</strong>
                        <br>Guest: @Model.CurrentAllocation.Guest.FullName
                        <br>Until: @Model.CurrentAllocation.CheckOutDate.ToString("MMM dd, yyyy")
                        @if (Model.CurrentAllocation.BathroomPreferenceOverride)
                        {
                            <br>

                            <span class="badge bg-warning">Bathroom Override</span>
                        }
                    </div>
                }
                else if (Model.CurrentMaintenance != null)
                {
                    <div class="alert alert-danger">
                        <strong>In Maintenance</strong>
                        <br>@Model.CurrentMaintenance.Category
                        <br>Until: @Model.CurrentMaintenance.EndDate.ToString("MMM dd, yyyy")
                        <br><small>@Model.CurrentMaintenance.Description</small>
                    </div>
                }
                else
                {
                    <div class="alert alert-success">
                        <strong>Available</strong>
                        <br>Ready for allocation
                    </div>
                }

                @if (Model.UpcomingAllocation != null)
                {
                    <div class="alert alert-warning">
                        <strong>Upcoming Allocation</strong>
                        <br>Guest: @Model.UpcomingAllocation.Guest.FullName
                        <br>From: @Model.UpcomingAllocation.CheckInDate.ToString("MMM dd, yyyy")
                    </div>
                }
            </div>
        </div>

        <!-- Room Statistics -->
        <div class="card mb-3">
            <div class="card-header">
                <h6><i class="fas fa-chart-bar"></i> Room Statistics</h6>
            </div>
            <div class="card-body">
                <div class="mb-2">
                    <strong>Total Allocations:</strong> @Model.RecentAllocations.Count
                </div>
                <div class="mb-2">
                    <strong>Average Stay:</strong>
                    @if (Model.RecentAllocations.Any())
                    {
                        @($"{Model.RecentAllocations.Average(a => a.Duration):F1} days")
                    }
                    else
                    {
                        <span class="text-muted">No data</span>
                    }
                </div>
                <div class="mb-2">
                    <strong>Last Guest:</strong>
                    @if (Model.LastAllocation != null)
                    {
                        @($"{Model.LastAllocation.Guest.FullName} ({Model.LastAllocation.CheckOutDate:MMM yyyy})")
                    }
                    else
                    {
                        <span class="text-muted">Never occupied</span>
                    }
                </div>
                <div class="mb-2">
                    <strong>Utilization Rate:</strong>
                    @if (Model.RecentAllocations.Any())
                    {
                        var totalDays = Model.RecentAllocations.Sum(a => a.Duration);
                        var monthsBack = 6;
                        var possibleDays = monthsBack * 30;
                        var utilizationRate = Math.Min((double)totalDays / possibleDays * 100, 100);
                        @($"{utilizationRate:F0}% (last 6 months)")
                    }
                    else
                    {
                        <span class="text-muted">0%</span>
                    }
                </div>
            </div>
        </div>

        <!-- Recent History -->
        @if (Model.RecentAllocations.Any())
        {
            <div class="card">
                <div class="card-header">
                    <h6><i class="fas fa-history"></i> Recent History</h6>
                </div>
                <div class="card-body">
                    @foreach (var allocation in Model.RecentAllocations.Take(5))
                    {
                        <div class="mb-2 p-2 border rounded">
                            <strong>@allocation.Guest.FullName</strong>
                            <br>
                            <small class="text-muted">
                                @allocation.CheckInDate.ToString("MMM dd") -
                                @allocation.CheckOutDate.ToString("MMM dd, yyyy")
                                (@allocation.Duration days)
                            </small>
                            @if (!string.IsNullOrEmpty(allocation.Notes))
                            {
                                <br>

                                <small class="text-info">@allocation.Notes</small>
                            }
                        </div>
                    }
                    @if (Model.RecentAllocations.Count > 5)
                    {
                        <small class="text-muted">... and @(Model.RecentAllocations.Count - 5) more</small>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-body text-center text-muted">
                    <i class="fas fa-bed fa-2x mb-2"></i>
                    <p>This room has never been allocated to a guest.</p>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}