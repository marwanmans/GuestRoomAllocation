@page "{id:int}"
@model DeleteApartmentModel
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@{
    ViewData["Title"] = "Delete Apartment";
}

<div class="row">
    <div class="col-md-8">
        <div class="card border-danger">
            <div class="card-header bg-danger text-white">
                <h5><i class="fas fa-exclamation-triangle"></i> Delete Apartment</h5>
            </div>
            <div class="card-body">
                <p class="lead">Are you sure you want to delete this apartment?</p>

                <div class="row">
                    <div class="col-md-6">
                        <h6>Apartment Information:</h6>
                        <ul class="list-unstyled">
                            <li><strong>Name:</strong> @Model.Apartment.Name</li>
                            <li><strong>Address:</strong> @Model.Apartment.Address</li>
                            <li><strong>Total Rooms:</strong> @Model.Apartment.Rooms.Count</li>
                            <li><strong>Total Space:</strong> @Model.Apartment.OverallSpace m²</li>
                            <li><strong>Bathrooms:</strong> @Model.Apartment.TotalBathrooms</li>
                            <li><strong>Laundry:</strong> @(Model.Apartment.HasLaundry ? "Yes" : "No")</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h6>Impact Assessment:</h6>
                        <ul class="list-unstyled">
                            <li><strong>Total Rooms:</strong> @Model.TotalRooms</li>
                            <li><strong>Current Allocations:</strong> @Model.CurrentAllocations</li>
                            <li><strong>Future Allocations:</strong> @Model.FutureAllocations</li>
                            <li><strong>Past Allocations:</strong> @Model.PastAllocations</li>
                            <li><strong>Maintenance Periods:</strong> @Model.MaintenancePeriods</li>
                        </ul>
                    </div>
                </div>

                @if (Model.CurrentAllocations > 0)
                {
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle"></i>
                        <strong>Critical Warning:</strong> This apartment has @Model.CurrentAllocations active guest(s) currently staying.
                        Deleting this apartment will immediately terminate their allocations and remove all rooms.
                    </div>
                }

                @if (Model.FutureAllocations > 0)
                {
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle"></i>
                        <strong>Warning:</strong> This apartment has @Model.FutureAllocations future allocation(s).
                        Deleting will cancel these upcoming reservations.
                    </div>
                }

                @if (Model.MaintenancePeriods > 0)
                {
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i>
                        <strong>Note:</strong> This apartment has @Model.MaintenancePeriods scheduled maintenance period(s)
                        that will also be deleted.
                    </div>
                }

                <div class="alert alert-warning mt-3">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>This action cannot be undone!</strong> Deleting this apartment will permanently remove:
                    <ul class="mb-0 mt-2">
                        <li>The apartment and all its rooms (@Model.TotalRooms rooms)</li>
                        <li>All allocations (current, future, and historical)</li>
                        <li>All maintenance periods and history</li>
                        <li>All associated data and records</li>
                    </ul>
                </div>

                <form method="post" class="d-inline">
                    <input type="hidden" asp-for="Apartment.Id" />
                    <div class="d-flex justify-content-between mt-4">
                        <a href="/Admin/Apartments" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Cancel
                        </a>
                        <button type="submit" class="btn btn-danger"
                                onclick="return confirm('TYPE DELETE to confirm: Are you absolutely sure you want to permanently delete this apartment and ALL its data? This cannot be undone!')"
                        @(Model.CurrentAllocations > 0 || Model.FutureAllocations > 0 ? "disabled title='Cannot delete apartment with active or future allocations'" : "")>
                            <i class="fas fa-trash"></i>
                            @(Model.CurrentAllocations > 0 || Model.FutureAllocations > 0 ? "Cannot Delete" : "Delete Apartment")
                        </button>
                    </div>
                </form>

                @if (Model.CurrentAllocations > 0 || Model.FutureAllocations > 0)
                {
                    <div class="mt-3">
                        <p class="text-muted">
                            <small>
                                <i class="fas fa-lightbulb"></i>
                                <strong>Suggestion:</strong> To delete this apartment, first move or cancel all current and future allocations,
                                then return to delete the apartment.
                            </small>
                        </p>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <!-- Current Guests -->
        @if (Model.ActiveAllocations.Any())
        {
            <div class="card mb-3">
                <div class="card-header">
                    <h6><i class="fas fa-users"></i> Current Guests (@Model.CurrentAllocations)</h6>
                </div>
                <div class="card-body">
                    @foreach (var allocation in Model.ActiveAllocations)
                    {
                        <div class="mb-2 p-2 border rounded">
                            <strong>@allocation.Guest.FullName</strong>
                            <br>
                            <small class="text-muted">
                                Room @allocation.Room.RoomNumber
                                <br>Until @allocation.CheckOutDate.ToString("MMM dd, yyyy")
                            </small>
                            <div class="mt-1">
                                <a href="/Allocations/Edit/@allocation.Id" class="btn btn-xs btn-outline-primary">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Future Guests -->
        @if (Model.UpcomingAllocations.Any())
        {
            <div class="card mb-3">
                <div class="card-header">
                    <h6><i class="fas fa-calendar-alt"></i> Upcoming Guests (@Model.FutureAllocations)</h6>
                </div>
                <div class="card-body">
                    @foreach (var allocation in Model.UpcomingAllocations.Take(5))
                    {
                        <div class="mb-2 p-2 border rounded">
                            <strong>@allocation.Guest.FullName</strong>
                            <br>
                            <small class="text-muted">
                                Room @allocation.Room.RoomNumber
                                <br>@allocation.CheckInDate.ToString("MMM dd") - @allocation.CheckOutDate.ToString("MMM dd, yyyy")
                            </small>
                            <div class="mt-1">
                                <a href="/Allocations/Edit/@allocation.Id" class="btn btn-xs btn-outline-primary">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                            </div>
                        </div>
                    }
                    @if (Model.UpcomingAllocations.Count > 5)
                    {
                        <small class="text-muted">... and @(Model.UpcomingAllocations.Count - 5) more</small>
                    }
                </div>
            </div>
        }

        <!-- Room List -->
        @if (Model.Apartment.Rooms.Any())
        {
            <div class="card">
                <div class="card-header">
                    <h6><i class="fas fa-bed"></i> Rooms (@Model.TotalRooms)</h6>
                </div>
                <div class="card-body">
                    @foreach (var room in Model.Apartment.Rooms.OrderBy(r => r.RoomNumber))
                    {
                        var isOccupied = Model.ActiveAllocations.Any(a => a.RoomId == room.Id);
                        var hasUpcoming = Model.UpcomingAllocations.Any(a => a.RoomId == room.Id);

                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span>
                                <strong>@room.RoomNumber</strong>
                                @if (room.HasPrivateBathroom)
                                {
                                    <i class="fas fa-bath text-info"></i>
                                }
                                <br>
                                <small class="text-muted">@room.Size m²</small>
                            </span>
                            <span>
                                @if (isOccupied)
                                {
                                    <span class="badge bg-primary">Occupied</span>
                                }
                                else if (hasUpcoming)
                                {
                                    <span class="badge bg-info">Upcoming</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">Available</span>
                                }
                            </span>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>