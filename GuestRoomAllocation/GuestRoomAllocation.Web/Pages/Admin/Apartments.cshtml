@page
@model ApartmentsModel
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@{
    ViewData["Title"] = "Apartments";
}

@section HeaderActions {
    <a href="/Admin/CreateApartment" class="btn btn-primary">
        <i class="fas fa-plus"></i> Add New Apartment
    </a>
}

<div class="row">
    @foreach (var apartment in Model.Apartments)
    {
        <div class="col-md-6 col-lg-4 mb-4">
            <div class="card h-100">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h5 class="mb-0">@apartment.Name</h5>
                            <small class="text-muted">@apartment.Address</small>
                        </div>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button"
                                    data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item" href="/Admin/EditApartment/@apartment.Id">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item" href="/Rooms/Create?apartmentId=@apartment.Id">
                                        <i class="fas fa-plus"></i> Add Room
                                    </a>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <a class="dropdown-item text-danger" href="/Admin/DeleteApartment/@apartment.Id">
                                        <i class="fas fa-trash"></i> Delete
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-6">
                            <div class="text-center">
                                <h4 class="text-primary">@apartment.Rooms.Count</h4>
                                <small class="text-muted">Rooms</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center">
                                <h4 class="text-success">@Model.GetAvailableRooms(apartment.Id)</h4>
                                <small class="text-muted">Available</small>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="d-flex justify-content-between mb-1">
                            <small><i class="fas fa-expand-arrows-alt"></i> Space:</small>
                            <small>@apartment.OverallSpace m²</small>
                        </div>
                        <div class="d-flex justify-content-between mb-1">
                            <small><i class="fas fa-bath"></i> Bathrooms:</small>
                            <small>@apartment.TotalBathrooms</small>
                        </div>
                        <div class="d-flex justify-content-between mb-1">
                            <small><i class="fas fa-tshirt"></i> Laundry:</small>
                            <small>@(apartment.HasLaundry ? "Yes" : "No")</small>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(apartment.CommonAreas))
                    {
                        <div class="mb-2">
                            <small class="text-muted">
                                <strong>Common Areas:</strong><br>
                                @apartment.CommonAreas
                            </small>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(apartment.Facilities))
                    {
                        <div class="mb-2">
                            <small class="text-muted">
                                <strong>Facilities:</strong><br>
                                @apartment.Facilities
                            </small>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(apartment.Amenities))
                    {
                        <div class="mb-2">
                            <small class="text-muted">
                                <strong>Amenities:</strong><br>
                                @apartment.Amenities
                            </small>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(apartment.MapLocation))
                    {
                        <div class="mb-2">
                            <a href="@apartment.MapLocation" target="_blank" class="btn btn-sm btn-outline-info">
                                <i class="fas fa-map-marker-alt"></i> View on Map
                            </a>
                        </div>
                    }
                </div>
                <div class="card-footer">
                    @if (apartment.Rooms.Any())
                    {
                        <div class="room-grid">
                            @foreach (var room in apartment.Rooms.OrderBy(r => r.RoomNumber))
                            {
                                var isOccupied = Model.IsRoomOccupied(room.Id);
                                var isInMaintenance = Model.IsRoomInMaintenance(room.Id);
                                var statusClass = isInMaintenance ? "danger" : isOccupied ? "primary" : "success";
                                var statusIcon = isInMaintenance ? "tools" : isOccupied ? "user" : "check";

                                <span class="badge bg-@statusClass me-1 mb-1"
                                      title="@(isInMaintenance ? "In Maintenance" : isOccupied ? "Occupied" : "Available")">
                                    <i class="fas fa-@statusIcon"></i> @room.RoomNumber
                                    @if (room.HasPrivateBathroom)
                                    {
                                        <i class="fas fa-bath" style="font-size: 0.7em;"></i>
                                    }
                                </span>
                            }
                        </div>
                    }
                    else
                    {
                        <small class="text-muted">No rooms added yet</small>
                    }
                </div>
            </div>
        </div>
    }
</div>

@if (!Model.Apartments.Any())
{
    <div class="text-center py-5">
        <i class="fas fa-building fa-3x text-muted mb-3"></i>
        <h4>No Apartments</h4>
        <p class="text-muted">Start by adding your first apartment to the system.</p>
        <a href="/Admin/CreateApartment" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add First Apartment
        </a>
    </div>
}
