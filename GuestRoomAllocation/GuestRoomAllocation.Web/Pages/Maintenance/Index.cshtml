@page
@model GuestRoomAllocation.Web.Pages.Maintenance.IndexModel
@{
    ViewData["Title"] = "Maintenance";
}

<!-- Include FullCalendar CSS -->
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css" rel="stylesheet" />

<style>
    .maintenance-event {
        font-size: 0.875rem;
        font-weight: 500;
    }

    .fc-event.maintenance-event {
        border-left-width: 4px;
    }

    .maintenance-card {
        transition: all 0.2s ease;
    }

    .maintenance-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }

    .status-scheduled { border-left: 4px solid #6f42c1; }
    .status-inprogress { border-left: 4px solid #fd7e14; }
    .status-completed { border-left: 4px solid #198754; }
    .status-cancelled { border-left: 4px solid #dc3545; }
</style>

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1 class="h2 mb-1">
                    <i class="fas fa-tools me-2 text-primary"></i>Maintenance Management
                </h1>
                <p class="text-muted">Schedule and track maintenance activities</p>
            </div>
            <div>
                <a asp-page="Create" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i>Schedule Maintenance
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Summary Cards -->
<div class="row g-3 mb-4">
    <div class="col-md-3">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-warning bg-opacity-10 rounded-3 p-3">
                            <i class="fas fa-clock text-warning fs-4"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title mb-1">Scheduled</h6>
                        <h4 class="mb-0">@Model.ScheduledCount</h4>
                        <small class="text-muted">Upcoming tasks</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-info bg-opacity-10 rounded-3 p-3">
                            <i class="fas fa-wrench text-info fs-4"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title mb-1">In Progress</h6>
                        <h4 class="mb-0">@Model.InProgressCount</h4>
                        <small class="text-muted">Active now</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-success bg-opacity-10 rounded-3 p-3">
                            <i class="fas fa-check text-success fs-4"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title mb-1">Completed</h6>
                        <h4 class="mb-0">@Model.CompletedCount</h4>
                        <small class="text-muted">This month</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-danger bg-opacity-10 rounded-3 p-3">
                            <i class="fas fa-times text-danger fs-4"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title mb-1">Cancelled</h6>
                        <h4 class="mb-0">@Model.CancelledCount</h4>
                        <small class="text-muted">This month</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row g-4">
    <!-- Calendar View -->
    <div class="col-lg-8">
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-transparent border-0">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-calendar-alt me-2 text-primary"></i>Maintenance Calendar
                    </h5>
                    <div class="btn-group btn-group-sm" role="group">
                        <button type="button" class="btn btn-outline-primary active" id="calendarMonth">Month</button>
                        <button type="button" class="btn btn-outline-primary" id="calendarWeek">Week</button>
                        <button type="button" class="btn btn-outline-primary" id="calendarList">List</button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div id="maintenanceCalendar"></div>
            </div>
        </div>
    </div>

    <!-- Upcoming Maintenance & Filters -->
    <div class="col-lg-4">
        <!-- Quick Filters -->
        <div class="card border-0 shadow-sm mb-4">
            <div class="card-header bg-transparent border-0">
                <h6 class="card-title mb-0">
                    <i class="fas fa-filter me-2 text-info"></i>Quick Filters
                </h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <button class="btn btn-outline-warning btn-sm filter-btn" data-status="scheduled">
                        <i class="fas fa-clock me-2"></i>Scheduled Only
                    </button>
                    <button class="btn btn-outline-info btn-sm filter-btn" data-status="inprogress">
                        <i class="fas fa-wrench me-2"></i>In Progress Only
                    </button>
                    <button class="btn btn-outline-secondary btn-sm filter-btn" data-status="all">
                        <i class="fas fa-list me-2"></i>Show All
                    </button>
                </div>
            </div>
        </div>

        <!-- Status Legend -->
        <div class="card border-0 shadow-sm mb-4">
            <div class="card-header bg-transparent border-0">
                <h6 class="card-title mb-0">
                    <i class="fas fa-palette me-2 text-info"></i>Status Legend
                </h6>
            </div>
            <div class="card-body">
                <div class="d-flex flex-column gap-3">
                    <div class="d-flex align-items-center">
                        <div class="me-3" style="width: 20px; height: 16px; background-color: #6f42c1; border-radius: 4px;"></div>
                        <span class="fw-medium">Scheduled</span>
                        <small class="text-muted ms-auto">Future tasks</small>
                    </div>
                    <div class="d-flex align-items-center">
                        <div class="me-3" style="width: 20px; height: 16px; background-color: #fd7e14; border-radius: 4px;"></div>
                        <span class="fw-medium">In Progress</span>
                        <small class="text-muted ms-auto">Active now</small>
                    </div>
                    <div class="d-flex align-items-center">
                        <div class="me-3" style="width: 20px; height: 16px; background-color: #198754; border-radius: 4px;"></div>
                        <span class="fw-medium">Completed</span>
                        <small class="text-muted ms-auto">Finished</small>
                    </div>
                    <div class="d-flex align-items-center">
                        <div class="me-3" style="width: 20px; height: 16px; background-color: #dc3545; border-radius: 4px;"></div>
                        <span class="fw-medium">Cancelled</span>
                        <small class="text-muted ms-auto">Cancelled tasks</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Upcoming Maintenance -->
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-transparent border-0">
                <h6 class="card-title mb-0">
                    <i class="fas fa-clock me-2 text-warning"></i>Upcoming This Week
                </h6>
            </div>
            <div class="card-body">
                @if (Model.UpcomingMaintenance.Any())
                {
                    @foreach (var maintenance in Model.UpcomingMaintenance.Take(5))
                    {
                        <div class="maintenance-card card border-0 bg-light mb-2 status-@maintenance.Status.ToString().ToLower()">
                            <div class="card-body p-3">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6 class="card-title mb-1">@maintenance.Category</h6>
                                    <span class="badge bg-@GetStatusColor(maintenance.Status)">@maintenance.Status</span>
                                </div>
                                <p class="card-text small text-muted mb-2">@maintenance.Description</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar me-1"></i>
                                        @maintenance.DateRange.StartDate.ToString("MMM dd")
                                    </small>
                                    <small class="text-muted">@maintenance.Target</small>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="text-center mt-3">
                        <a asp-page="List" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-list me-2"></i>View All
                        </a>
                    </div>
                }
                else
                {
                    <div class="text-center py-3">
                        <i class="fas fa-check-circle text-success fs-1 mb-2"></i>
                        <p class="text-muted mb-0">No upcoming maintenance this week</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- FullCalendar JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('maintenanceCalendar');
        var calendar;

        function initializeCalendar() {
            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                height: 450,
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: ''
                },
                events: {
                    url: '/api/maintenance/calendar',
                    method: 'GET',
                    failure: function(error) {
                        console.error('Maintenance calendar loading error:', error);
                    }
                },
                eventClick: function(info) {
                    var props = info.event.extendedProps;
                    var startDate = info.event.start ? info.event.start.toLocaleDateString() : 'N/A';
                    var endDate = info.event.end ? info.event.end.toLocaleDateString() : 'N/A';

                    var details = `Category: ${props.category}\n`;
                    details += `Target: ${props.target}\n`;
                    details += `Status: ${props.status}\n`;
                    details += `Dates: ${startDate} - ${endDate}\n`;
                    details += `Description: ${props.description}`;
                    if (props.notes) {
                        details += `\nNotes: ${props.notes}`;
                    }

                    alert(details);
                },
                dateClick: function(info) {
                    if (confirm(`Would you like to schedule maintenance for ${info.dateStr}?`)) {
                        window.location.href = `/Maintenance/Create?date=${info.dateStr}`;
                    }
                }
            });

            calendar.render();
        }

        initializeCalendar();

        // View switcher buttons
        document.getElementById('calendarMonth').addEventListener('click', function() {
            calendar.changeView('dayGridMonth');
            setActiveButton('calendarMonth');
        });

        document.getElementById('calendarWeek').addEventListener('click', function() {
            calendar.changeView('timeGridWeek');
            setActiveButton('calendarWeek');
        });

        document.getElementById('calendarList').addEventListener('click', function() {
            calendar.changeView('listWeek');
            setActiveButton('calendarList');
        });

        function setActiveButton(activeId) {
            document.querySelectorAll('.btn-group .btn').forEach(btn => {
                btn.classList.remove('active');
            });
            document.getElementById(activeId).classList.add('active');
        }

        // Filter functionality
        document.querySelectorAll('.filter-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                var status = this.dataset.status;
                // Remove active class from all filter buttons
                document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');

                // Apply filter logic here
                if (status === 'all') {
                    calendar.removeAllEventSources();
                    calendar.addEventSource('/api/maintenance/calendar');
                } else {
                    calendar.removeAllEventSources();
                    calendar.addEventSource(`/api/maintenance/calendar?status=${status}`);
                }
            });
        });
    });

    @{
            string GetStatusColor(GuestRoomAllocation.Domain.Enums.MaintenanceStatus status)
            {
                    return status switch
                    {
                            GuestRoomAllocation.Domain.Enums.MaintenanceStatus.Scheduled => "warning",
                            GuestRoomAllocation.Domain.Enums.MaintenanceStatus.InProgress => "info",
                            GuestRoomAllocation.Domain.Enums.MaintenanceStatus.Completed => "success",
                            GuestRoomAllocation.Domain.Enums.MaintenanceStatus.Cancelled => "danger",
                            _ => "secondary"
                    };
            }
    }
</script>